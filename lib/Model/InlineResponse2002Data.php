<?php
/**
 * InlineResponse2002Data
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Wherewhere
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * WhereAPI
 *
 * WhereWhere.cloud
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Wherewhere\Model;

use \ArrayAccess;
use \Wherewhere\ObjectSerializer;

/**
 * InlineResponse2002Data Class Doc Comment
 *
 * @category Class
 * @package  Wherewhere
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InlineResponse2002Data implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_2_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'enterprise_id' => 'int',
        'app_id' => 'string',
        'app_secret' => 'string',
        'enterprise_name' => 'string',
        'status' => 'string',
        'staus_text' => 'string',
        'active_time' => 'string',
        'account_name' => 'string',
        'devices_count' => 'int',
        'create_time' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'enterprise_id' => null,
        'app_id' => null,
        'app_secret' => null,
        'enterprise_name' => null,
        'status' => null,
        'staus_text' => null,
        'active_time' => null,
        'account_name' => null,
        'devices_count' => null,
        'create_time' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'enterprise_id' => 'enterprise_id',
        'app_id' => 'app_id',
        'app_secret' => 'app_secret',
        'enterprise_name' => 'enterprise_name',
        'status' => 'status',
        'staus_text' => 'staus_text',
        'active_time' => 'active_time',
        'account_name' => 'account_name',
        'devices_count' => 'devices_count',
        'create_time' => 'create_time'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'enterprise_id' => 'setEnterpriseId',
        'app_id' => 'setAppId',
        'app_secret' => 'setAppSecret',
        'enterprise_name' => 'setEnterpriseName',
        'status' => 'setStatus',
        'staus_text' => 'setStausText',
        'active_time' => 'setActiveTime',
        'account_name' => 'setAccountName',
        'devices_count' => 'setDevicesCount',
        'create_time' => 'setCreateTime'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'enterprise_id' => 'getEnterpriseId',
        'app_id' => 'getAppId',
        'app_secret' => 'getAppSecret',
        'enterprise_name' => 'getEnterpriseName',
        'status' => 'getStatus',
        'staus_text' => 'getStausText',
        'active_time' => 'getActiveTime',
        'account_name' => 'getAccountName',
        'devices_count' => 'getDevicesCount',
        'create_time' => 'getCreateTime'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['enterprise_id'] = $data['enterprise_id'] ?? null;
        $this->container['app_id'] = $data['app_id'] ?? null;
        $this->container['app_secret'] = $data['app_secret'] ?? null;
        $this->container['enterprise_name'] = $data['enterprise_name'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['staus_text'] = $data['staus_text'] ?? null;
        $this->container['active_time'] = $data['active_time'] ?? null;
        $this->container['account_name'] = $data['account_name'] ?? null;
        $this->container['devices_count'] = $data['devices_count'] ?? null;
        $this->container['create_time'] = $data['create_time'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['enterprise_id'] === null) {
            $invalidProperties[] = "'enterprise_id' can't be null";
        }
        if ($this->container['app_id'] === null) {
            $invalidProperties[] = "'app_id' can't be null";
        }
        if ($this->container['app_secret'] === null) {
            $invalidProperties[] = "'app_secret' can't be null";
        }
        if ($this->container['enterprise_name'] === null) {
            $invalidProperties[] = "'enterprise_name' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['staus_text'] === null) {
            $invalidProperties[] = "'staus_text' can't be null";
        }
        if ($this->container['active_time'] === null) {
            $invalidProperties[] = "'active_time' can't be null";
        }
        if ($this->container['account_name'] === null) {
            $invalidProperties[] = "'account_name' can't be null";
        }
        if ($this->container['devices_count'] === null) {
            $invalidProperties[] = "'devices_count' can't be null";
        }
        if ($this->container['create_time'] === null) {
            $invalidProperties[] = "'create_time' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets enterprise_id
     *
     * @return int
     */
    public function getEnterpriseId()
    {
        return $this->container['enterprise_id'];
    }

    /**
     * Sets enterprise_id
     *
     * @param int $enterprise_id 企业id
     *
     * @return self
     */
    public function setEnterpriseId($enterprise_id)
    {
        $this->container['enterprise_id'] = $enterprise_id;

        return $this;
    }

    /**
     * Gets app_id
     *
     * @return string
     */
    public function getAppId()
    {
        return $this->container['app_id'];
    }

    /**
     * Sets app_id
     *
     * @param string $app_id app_id（子账号id）
     *
     * @return self
     */
    public function setAppId($app_id)
    {
        $this->container['app_id'] = $app_id;

        return $this;
    }

    /**
     * Gets app_secret
     *
     * @return string
     */
    public function getAppSecret()
    {
        return $this->container['app_secret'];
    }

    /**
     * Sets app_secret
     *
     * @param string $app_secret app_secret
     *
     * @return self
     */
    public function setAppSecret($app_secret)
    {
        $this->container['app_secret'] = $app_secret;

        return $this;
    }

    /**
     * Gets enterprise_name
     *
     * @return string
     */
    public function getEnterpriseName()
    {
        return $this->container['enterprise_name'];
    }

    /**
     * Sets enterprise_name
     *
     * @param string $enterprise_name 登录账号
     *
     * @return self
     */
    public function setEnterpriseName($enterprise_name)
    {
        $this->container['enterprise_name'] = $enterprise_name;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status 状态 1 企业 0 禁用
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets staus_text
     *
     * @return string
     */
    public function getStausText()
    {
        return $this->container['staus_text'];
    }

    /**
     * Sets staus_text
     *
     * @param string $staus_text 状态描述
     *
     * @return self
     */
    public function setStausText($staus_text)
    {
        $this->container['staus_text'] = $staus_text;

        return $this;
    }

    /**
     * Gets active_time
     *
     * @return string
     */
    public function getActiveTime()
    {
        return $this->container['active_time'];
    }

    /**
     * Sets active_time
     *
     * @param string $active_time 激活时间
     *
     * @return self
     */
    public function setActiveTime($active_time)
    {
        $this->container['active_time'] = $active_time;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string $account_name 账号名称
     *
     * @return self
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets devices_count
     *
     * @return int
     */
    public function getDevicesCount()
    {
        return $this->container['devices_count'];
    }

    /**
     * Sets devices_count
     *
     * @param int $devices_count 设备数量
     *
     * @return self
     */
    public function setDevicesCount($devices_count)
    {
        $this->container['devices_count'] = $devices_count;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time 创建时间
     *
     * @return self
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


